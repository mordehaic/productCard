name: product-release2
run-name: ${{ github.actor }} is launching ðŸš€

on:
  workflow_dispatch:   # To prevent automatic execution of the pipeline when push on a remote branch

env:
  NODE_VERSION: "18.x" # set this to the node version to use
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
  GITHUB_CONTEXT: ${{ toJSON(github) }}
        
jobs:

  product-release2:
      name: Deploy to UAT 
      # The type of runner that the job will run on
      runs-on: ubuntu-latest
      environment: UAT

      # Steps represent a sequence of tasks that will be executed as part of the job
      steps:
        # Check-out the repository under $GITHUB_WORKSPACE, so the job can access it
        - name: Checkout the repository
          uses: actions/checkout@v3
          # with:
          #   fetch-depth: 0

        - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."

        - name: Set up Node.js
          uses: actions/setup-node@v3
          with:
            node-version: ${{ env.NODE_VERSION }}

        # Runs a single command using the runners shell
        - name: Install Salesforce CLI
          run: npm install sfdx-cli --global
        
        - name: Download artifact with command line gh run download run_id    
          # The type of the RUN_ID has to be a string
          run: |
            gh run download "${{vars.RUN_ID}}"  
          shell: bash
        
        - name: Test downloaded Artifact
          run: ls -R      

        # Works when creating tag and each time run the release to new tag created
        # Validation Failed: {"resource":"Release","code":"already_exists","field":"tag_name"}   
        - name: Create GitHub release
          uses: actions/create-release@v1
          
          env: 
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN}}
          with:
            tag_name: ${{ github.ref_name }}  # ref_name = tag number created on github
            release_name: Release ${{ github.run_number }}
            
        # Runs a single command using the runners shell
        - name: Create the server.key file from the secret variable SERVER_KEY
          run: echo "${{ secrets.SERVER_KEY }}"  > server.key
          
        # Runs a single command using the runners shell
        - name: Authentication to Salesforce
          run: sfdx force:auth:jwt:grant -i ${{ secrets.CONSUMER_KEY }} -f server.key -u ${{ vars.USERNAME }} -r ${{ vars.INSTANCEURL }}

        # Runs a set of commands using the runners shell
        - name: Deployment to Salesforce
          run: sfdx force:source:deploy -p force-app -w 10 -u ${{vars.USERNAME}}
        
        - run: echo "This job's status is ${{ job.status }}."